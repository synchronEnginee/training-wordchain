export interface Word {
  text: string;           // 単語（ひらがな）
  length: number;         // 文字数
  firstChar: string;      // 最初の文字
  lastChar: string;       // 最後の文字
  category?: string;      // カテゴリ（動物、食べ物など）
}

// 5文字の単語データ
const fiveCharWords: string[] = [
  "アーモンド", "あかちゃん", "あかとんぼ", "あくりょく", "アドバイス",
  "あまのがわ", "アンケート", "いとでんわ", "イヤリング", "インテリア",
  "うきぶくろ", "うでどけい", "えいがかん", "えかきうた", "エネルギー",
  "おうどいろ", "おおそうじ", "おおみそか", "おかあさん", "おこづかい",
  "オットセイ", "おとうさん", "おとしだま", "おにごっこ", "おひめさま",
  "おべんとう", "オムライス", "オルゴール", "おんどけい", "かいじゅう",
  "かがくしゃ", "かぐやひめ", "かくれんぼ", "かざぐるま", "カスタード",
  "かたぐるま", "かたつむり", "カフェオレ", "カブトムシ", "かみしばい",
  "かみずもう", "カメレオン", "カルシウム", "カンガルー", "かんこうち",
  "かんそうき", "かんでんち", "キーボード", "きねんひん", "きのこがり",
  "きゅうけい", "きゃくせき", "キャプテン", "きょういく", "きょうそう",
  "キリギリス", "きれいずき", "きんメダル", "くさだんご", "くちげんか",
  "けいじばん", "ケチャップ", "けっしょう", "こいのぼり", "コガネムシ",
  "こどものひ", "コロンブス", "こんじょう", "コンセント", "こんちゅう",
  "サーキット", "サーフィン", "さいゆうき", "さかあがり", "さがしもの",
  "さかなつり", "さくらんぼ", "サバイバル", "サポーター", "しちごさん",
  "じどうしゃ", "しまもよう", "しゃかいか", "ジャムパン", "ジャンケン",
  "シャンプー", "しゅうさい", "じゅうたん", "じゅうどう", "しゅぎょう",
  "しゅくだい", "しゅんかん", "しょうかき", "しょうぐん", "しょうばい",
  "しょうらい", "しょくどう", "しょくパン", "シルエット", "しんごうき",
  "すきまかぜ", "スクーター", "スタジアム", "ストライク", "ストレート",
  "すなあそび", "すなどけい", "スニーカー", "スパゲティ", "すべりだい",
  "スポンサー", "せいでんき", "せいとかい", "ソーセージ", "ダイエット",
  "たいりょう", "たからばこ", "たからもの", "タキシード", "たけトンボ",
  "たまごやき", "たまてばこ", "ちからもち", "ちきゅうぎ", "ちとせあめ",
  "チャーハン", "ちゃくせき", "ちゃくりく", "ちゅうごく", "ちゅうもく",
  "ちゅうもん", "ちょくせん", "つなわたり", "つまようじ", "テクニック",
  "てんじょう", "でんちゅう", "とうきょう", "トースター", "とおまわり",
  "とおりみち", "ところてん", "としょかん", "トロピカル", "なかなおり",
  "ながれぼし", "なつまつり", "なつみかん", "なつやすみ", "ななふしぎ",
  "なんきょく", "にっちょく", "にんぎょう", "ねんりょう", "のうぎょう",
  "のうりょく", "のぼりざか", "ハーモニカ", "ハイキング", "はえたたき",
  "バスタオル", "はつひので", "はつめいか", "はつもうで", "はとどけい",
  "はなばたけ", "ハプニング", "はみがきこ", "はやうまれ", "はやとちり",
  "はらどけい", "ハリウッド", "はりねずみ", "はるやすみ", "はれすがた",
  "ハロウィン", "ひこうせん", "ひざこぞう", "ひざまくら", "ひとめぼれ",
  "ひとりごと", "ひとりじめ", "ひとじろべえ", "やつあたり", "やっきょく", "やまのぼり",
  "ゆうえんち", "ゆうしゅう", "ゆうしょう", "ゆうじょう", "ゆうしょく",
  "ゆきおんな", "ゆきだるま", "ゆでたまご", "ヨーグルト", "らくしょう",
  "らっかせい", "ヨーロッパ", "ラブレター", "ランドセル", "ランニング",
  "リクエスト", "リコーダー", "りっこうほ", "りょうがえ", "りょうしん",
  "りょくちゃ", "リラックス", "りれきしょ", "ルーレット", "れいぞうこ",
  "レギュラー", "レストラン", "レスリング", "れんきゅう", "レンタカー",
  "ログハウス", "ろてんぶろ", "ワイシャツ"
];

// カタカナをひらがなに変換する関数
function katakanaToHiragana(str: string): string {
  return str.replace(/[\u30A1-\u30F6]/g, (match) => {
    const chr = match.charCodeAt(0) - 0x60;
    return String.fromCharCode(chr);
  });
}

// 単語データを生成する関数
function createWordData(wordList: string[], length: number): Word[] {
  return wordList.map(word => {
    const hiraganaWord = katakanaToHiragana(word);
    return {
      text: hiraganaWord,
      length: length,
      firstChar: hiraganaWord.charAt(0),
      lastChar: hiraganaWord.charAt(hiraganaWord.length - 1),
      category: "general"
    };
  });
}

// 4文字の単語データ
const fourCharWords: string[] = [
  "アイドル", "いのしし", "イベント", "うぐいす", "エジソン",
  "エジプト", "おおさか", "かいがん", "かきぞめ", "かていか",
  "かんづめ", "くうこう", "くじびき", "くしゃみ", "くだもの",
  "くつひも", "くものす", "クレヨン", "けしゴム", "こうさく",
  "こうもり", "こくはく", "こづつみ", "サービス", "さいころ",
  "さかさま", "さかだち", "しまうま", "シンバル", "スイッチ",
  "すいとう", "すずむし", "スタート", "スタミナ", "スペイン",
  "せいふく", "せいぶつ", "せんざい", "せんせい", "そうじき",
  "そうだん", "そうめん", "そろばん", "たいいく", "タイトル",
  "たいよう", "タクシー", "たけのこ", "たまねぎ", "ちかみち",
  "つめきり", "てかがみ", "トラック", "とりけし", "トンカチ",
  "とんかつ", "なわとび", "にせもの", "ニュース", "にわとり",
  "にんじゃ", "ぬけあな", "ぬけがけ", "ネクタイ", "ねこじた",
  "はなよめ", "ふじさん", "ふでばこ", "みかづき", "めぐすり",
  "むぎちゃ", "むしかご", "もちつき", "やきいも", "やきそば",
  "やきとり", "やきにく", "よこづな", "ライオン", "らくがき",
  "りょこう", "レシート", "ろうそく", "ロンドン"
];

// 6文字の単語データ
const sixCharWords: string[] = [
  "アーティスト", "アクセサリー", "あげはちょう", "あさめしまえ", "アスレチック",
  "アスパラガス", "アナウンサー", "いちにんまえ", "いろえんぴつ", "インタビュー",
  "うちゅうじん", "エアロビクス", "えんどうまめ", "おいなりさん", "おうえんだん",
  "おおがねもち", "オーケストラ", "おさななじみ", "おしょうがつ", "おじょうさん",
  "おとぎばなし", "おばけやしき", "おもちゃばこ", "かいしゃいん", "かいすいよく",
  "かいてんずし", "かいらんばん", "かみなりぐも", "かんさいべん", "かんジュース",
  "かんらんしゃ", "きたいはずれ", "きねんきって", "キャラクター", "きゅうしゅう",
  "きょうかしょ", "きょうりゅう", "クエスチョン", "くさやきゅう", "くちやくそく",
  "くもりガラス", "くやしなみだ", "クラリネット", "クレオパトラ", "くわずぎらい",
  "けいろうのひ", "けしょうひん", "けつえきがた", "こうがくねん", "こうこうせい",
  "コスチューム", "コマーシャル", "コンクリート", "さいせんたん", "さいばんかん",
  "さくらふぶき", "さらいしゅう", "サラリーマン", "さんごしょう", "サンドイッチ",
  "さんりんしゃ", "シートベルト", "シーラカンス", "しったかぶり", "シャンデリア",
  "しょうりゃく", "しょしんしゃ", "しょたいめん", "ショッピング", "シルクハット",
  "しんかんせん", "しんたいそう", "しんぶんしゃ", "スクールバス", "せいじんしき",
  "せいはんたい", "せいほうけい", "せいめいせん", "せかいきろく", "せんすいかん",
  "せんたくもの", "そうじゅうし", "そだちざかり", "ソフトボール", "たいいくかん",
  "ひょうしぬけ", "ピンポンだま", "ファッション", "ファンタジー", "ファンレター",
  "ふうせんガム", "ふくわじゅつ", "ブルドーザー", "プロやきゅう", "ヘアスプレー",
  "へいきんだい", "ペットボトル", "ほうていしき", "ほうれんそう", "ほしうらない",
  "ほっかいどう", "ホットケーキ", "ホットドッグ", "ほにゅうるい", "まけずぎらい",
  "マスクメロン", "まちあいしつ", "まっくらやみ", "まつりばやし", "マリオネット",
  "まんげきょう", "まんねんひつ", "ミートソース", "ミートボール", "みずようかん",
  "みちあんない", "みとこうもん", "ミニスカート", "ミラーボール", "みりょくてき",
  "ミルクティー", "ミルフィーユ", "むかしばなし", "モーツァルト", "もめんどうふ",
  "やきもちやき", "やくそくごと", "ゆうとうせい", "ゆきがっせん", "よていひょう",
  "リアクション", "リフレッシュ", "りゅうこうご", "りょうりにん", "レモンティー",
  "ワイングラス"
];

// 7文字の単語データ
const sevenCharWords: string[] = [
  "アイスクリーム", "アイスホッケー", "アルファベット", "いすとりゲーム", "イソギンチャク",
  "いっすんぼうし", "インターネット", "うそはっけんき", "うちあげはなび", "うちでのこづち",
  "うらしまたろう", "えいがかんとく", "エスカレーター", "おうふくはがき", "オーストラリア",
  "おたまじゃくし", "カップラーメン", "かていきょうし", "キャッチボール", "キャンプじょう",
  "きょうぎじょう", "きんぎょすくい", "クリームソーダ", "けいたいでんわ", "ゲームセンター",
  "コインロッカー", "こうそくどうろ", "コーヒーカップ", "コレステロール", "コンピューター",
  "さいしゅうかい", "サッカーボール", "さっちゅうざい", "サンタクロース", "シーソーゲーム",
  "ジグソーパズル", "しゃこうダンス", "ジャングルジム", "シュークリーム", "しゅうぶんのひ",
  "しょうがいぶつ", "しょうがくせい", "しょうがっこう", "しょうじきもの", "しょうぼうしゃ",
  "しょうみきげん", "ショートケーキ", "しょくぶつえん", "すいさいえのぐ", "スケッチブック",
  "せいしょうねん", "せっちゃくざい", "せんこうはなび", "そうがんきょう", "そうりだいじん",
  "そつぎょうしき", "ソフトクリーム", "だいとうりょう", "タイムリミット", "タツノオトシゴ",
  "たなばたまつり", "たんきょりそう", "ちゅうがくせい", "ちょうこくとう", "ちょうネクタイ",
  "ツタンカーメン", "テーブルクロス", "デジタルカメラ", "てるてるぼうず", "テレビばんぐみ",
  "でんしんばしら", "でんわばんごう", "トノサマガエル", "トライアスロン", "トライアングル",
  "ないしょばなし", "にさんかたんそ", "にちようだいく", "ぬきうちテスト", "はこいりむすめ",
  "はしりたかとび", "はしりはばとび", "はずかしがりや", "はっぽうびじん", "はないちもんめ",
  "はやいものがち", "はやくちことば", "ハレーすいせい", "ひっこみじあん", "ひやしちゅうか",
  "ひゃっかじてん", "ひょうじゅんご", "フォークダンス", "フライドチキン", "プラネタリウム",
  "フルーツケーキ", "フルーツポンチ", "ペットショップ", "ぼうえんきょう", "ホールインワン",
  "ほくとしちせい", "ほっきょくぐま", "ポテトチップス", "マーボーどうふ", "マッシュルーム",
  "みずたまもよう", "みたらしだんご", "ミュージシャン", "むぎわらぼうし", "めざましどけい",
  "めんきょしょう", "モーターボート", "モンシロチョウ", "もんだいしゅう", "やきゅうチーム",
  "やこうれっしゃ", "ゆうびんきょく", "ゆのみぢゃわん", "ゆびにんぎょう", "ようふくだんす",
  "ラーメンやたい", "ラジオたいそう", "ラブストーリー", "リゾートホテル", "りゅうがくせい",
  "リュックサック", "レースクイーン", "レスキューたい", "ろうがんきょう", "ロードローラー",
  "ロールキャベツ", "ロケットはなび", "ろめんでんしゃ", "ワールドカップ"
];

// 8文字の単語データ
const eightCharWords: string[] = [
  "うちゅうひこうし", "えいせいほうそう", "えきしょうテレビ", "おうきゅうてあて", "オレンジジュース",
  "おんせんりょかん", "かそうぎょうれつ", "かぶしきがいしゃ", "ガソリンスタンド", "キャッシュカード",
  "きゅうきゅうしゃ", "けんこうしんだん", "こうこうやきゅう", "こうしゅうトイレ", "サッカーせんしゅ",
  "サンフランシスコ", "しゃしんさつえい", "しょうゆラーメン", "しんけんしょうぶ", "しんこんりょこう",
  "ストップウォッチ", "スポーツせんしゅ", "スモークサーモン", "チェックポイント", "ちゅうかりょうり",
  "ちゅうしゃじょう", "はだかのおうさま", "はなさかじいさん", "はんじゅくたまご", "ファーストクラス",
  "フレンチトースト", "マカダミアナッツ", "みなみはんきゅう", "ミルクキャラメル", "メリーゴーランド",
  "やきゅうせんしゅ", "やりたいほうだい", "ゆうびんばんごう", "ランチョンマット", "ランニングシャツ",
  "りゅうぐうじょう", "りょうめんテープ"
];

// 9文字以上の単語データ
const ninePlusCharWords: string[] = [
  "エメラルドグリーン", "かいちゅうでんとう", "ぎゅうにゅうパック", "ジェットコースター", "しゅうがくりょこう",
  "スーパーマーケット", "チョコレートパフェ", "トイレットペーパー", "ニュースキャスター", "ハンバーグステーキ",
  "ひゃくにんいっしゅ", "ひょうしょうじょう", "ファッションショー", "ふりかえきゅうじつ", "フルーツバスケット",
  "れいとうしょくひん", "レオナルドダビンチ", "レントゲンしゃしん", "ロシアンルーレット"
];

// 全ての単語データを結合
export const wordsData: Word[] = [
  ...createWordData(fourCharWords, 4),
  ...createWordData(fiveCharWords, 5),
  ...createWordData(sixCharWords, 6),
  ...createWordData(sevenCharWords, 7),
  ...createWordData(eightCharWords, 8),
  ...ninePlusCharWords.map(word => {
    const hiraganaWord = katakanaToHiragana(word);
    return {
      text: hiraganaWord,
      length: hiraganaWord.length,
      firstChar: hiraganaWord.charAt(0),
      lastChar: hiraganaWord.charAt(hiraganaWord.length - 1),
      category: "general"
    };
  })
];

// 文字数でフィルターする関数
export function getWordsByLength(lengths: number[]): Word[] {
  if (lengths.length === 0) return wordsData;
  return wordsData.filter(word => 
    lengths.includes(word.length) || (lengths.includes(8) && word.length >= 8)
  );
}

// 最初の文字でフィルターする関数
export function getWordsByFirstChar(firstChar: string | null): Word[] {
  if (!firstChar) return wordsData;
  return wordsData.filter(word => word.firstChar === firstChar);
}

// 検索でフィルターする関数
export function getWordsBySearch(searchQuery: string): Word[] {
  if (!searchQuery) return wordsData;
  return wordsData.filter(word => word.text.includes(searchQuery));
}

// 複合フィルター関数
export function filterWords(
  lengths: number[] = [],
  firstChar: string | null = null,
  searchQuery: string = ""
): Word[] {
  let filteredWords = wordsData;

  // 文字数フィルター
  if (lengths.length > 0) {
    filteredWords = filteredWords.filter(word => 
      lengths.includes(word.length) || (lengths.includes(8) && word.length >= 8)
    );
  }

  // 最初の文字フィルター
  if (firstChar) {
    filteredWords = filteredWords.filter(word => word.firstChar === firstChar);
  }

  // 検索フィルター
  if (searchQuery) {
    filteredWords = filteredWords.filter(word => word.text.includes(searchQuery));
  }

  return filteredWords;
}